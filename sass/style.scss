@mixin title-large {
	font-size: 4em;
	line-height: 1;
	font-weight: bold;
	font-family: monospace;
}

@mixin border-box {
	box-sizing: border-box;
	-moz-box-sizing: border-box;
	-webkit-box-sizing: border-box;
}

@mixin separator($color: yellow) {
	&::after {
		content: '';
		display: block;
		width: 100px;
		height: 4px;
		background: $color;
	}
}

@mixin box-shadow($shadow...) {
	box-shadow: $shadow;
	-moz-box-shadow: $shadow;
	-webkit-box-shadow: $shadow;
}

@mixin mobile {
	@media (max-width: 600px) {
		@content;
	}
}

@mixin type-1($size) {
	font-family: monospace;
	@if $size == 16 {
		font-size: 1em;
		font-weight: normal;
	} @else if $size == 18 {
		font-size: 1.25em;
		font-weight: normal;
	} @else if $size == 24 {
		font-size: 1.5em;
		font-weight: bold;
	}
}

$tema: desert;
$primary-color: black;
$secondary-color: gray;
$primary: blue;
$primary-font: monospace;

$container: 960;
$gutter: 20;
$columns: 12;

@for $i from 1 through $columns {
	$width: $container / $columns * $i - $gutter;
	.grid-#{$i} {
		width: $width + px;
	}
}

@if $tema == ocean {
	$primary-color: blue;
	$secondary-color: orange;
} @else if $tema == desert {
	$primary-color: yellow;
	$secondary-color: purple;	
}

p {
	color: $primary-color;
	background-color: $secondary-color;
	@include type-1(18);
}

.erro {
	color: red;
	font-weight: bold;
}

.button-erro {
	@extend .erro;
	padding: 20px;
	width: 200px;
}

%clearfix::after {
	content: '';
	display: table;
	clear: both;
	height: 100px
}

@mixin device($size) {
	@if $size == mobile {
		@media (max-width: 300px) {
			@content;
		}
	}
	@if $size == tablet {
		@media (max-width: 600px) {
			@content;
		}
	}
	@if $size == desktop {
		@media (max-width: 900px) {
			@content;
		}
	}
}

section {
	width: 100%;
	@include device(tablet) {
		width: 80%;
	}
	@include device(mobile) {
		width: 60%;
	}
	@extend %clearfix;
	max-width: 600px;
	margin: 0 auto;
	@include border-box;
	@include box-shadow(5px 5px 0 0 rgba(0,0,0,.5), 10px 10px 0 0 rgba(0,0,0,.5))
}

p {
	width: round((2 * 100px + 500 + $gutter) / 1.3);
}

.modal {
	h1 {
		color: $primary;
		font-family: $primary-font;
		margin-bottom: $gutter;
		@include title-large;
		@include separator(red);
	}
	
	p {
		font: {
			size: 1.2em;
			family: $primary-font;
			style: italic;
		}
		line-height: 1.4;
		@include mobile {
			color: pink;
			font-size: 1em;
		}
	}
	
	a {
		display: block;
		max-width: 120px;
		padding: 10px;
		border-radius: 4px;
		text-align: center;
		background: lighten($primary, 20%);
		color: white;
		text-decoration: none;
		text-transform: uppercase;
		font-family: $primary-font;
	}
}

ul {
	text-align: center;
	li {
		display: inline-block;
		list-style: none;
		a {
			display: block;
			padding: 20px;
			text-decoration: none;
			background: transparentize($primary, 0.7);
			color: white;
			&:hover, &.active {
				background: pink;
			}
		}
	}
}

@function em($pixels, $context: 16) {
	@return ($pixels / $context * 1em);
}

@function grid($columns, $total: 12) {
	@return ($columns / $total) * 100%;
}

.teste {
	font-size: em(24);
	p {
		font-size: em(18 ,24);
		width: grid(6);
	}
}

$i: 1;

@while $i <= 6 {
	.type-#{$i} {
		font-size: 16 * $i + px;
	}
	$i: $i + 1;
}

$redes: facebook twitter pinterest instagram;

@each $rede in $redes {
	.#{$rede}-icon {
		background-image: url('../img/#{$rede}.png');
	}
}